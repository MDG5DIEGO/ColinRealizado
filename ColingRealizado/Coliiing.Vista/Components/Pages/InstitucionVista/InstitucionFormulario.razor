
@inject SweetAlertService sweet

<h3>Institucion Formulario</h3>
<NavigationLock OnBeforeInternalNavigation="AntesDeNavegarInternamente"/>
<EditForm EditContext="contextoEdicion" OnValidSubmit="OnValidSubmit"> 
    <DataAnnotationsValidator/>    
    <div class="mb-3">
        <label>Nombre:</label>
        <div>
           <InputText class="form-control" @bind-Value="@institucion.Nombre"></InputText>
            <ValidationMessage For="@(()=>institucion.Nombre)"></ValidationMessage>
        </div>

    </div>
    <div class="mb-3">
        <label>Tipo:</label>
        <div>
            <InputText class="form-control" @bind-Value="@institucion.Tipo"></InputText>
            <ValidationMessage For="@(()=>institucion.Tipo)"></ValidationMessage>
        </div>

    </div>
    <div class="mb-3">
        <label>Direccion:</label>
        <div>
            <InputText class="form-control" @bind-Value="@institucion.Direccion"></InputText>
            <ValidationMessage For="@(()=>institucion.Direccion)"></ValidationMessage>
        </div>

    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-primary" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    private EditContext contextoEdicion = null;
    [Parameter]
    [EditorRequired]
    public Institucionn institucion { get; set; } = null;


    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback Cancelar { get; set; }

    public bool formularioPostOk { get; set; }

    protected override void OnInitialized()
    {
        contextoEdicion = new(institucion);
    }
    private async Task AntesDeNavegarInternamente(LocationChangingContext contexto)
    {
        var formularioModificado = contextoEdicion.IsModified();

        if (!formularioModificado || formularioPostOk)
        {
            return;
        }

        var result = await sweet.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmacion",
                Text = "Desea abandonar esta pantalla? Perdera los cambios",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
            });

        var confirm = !string.IsNullOrEmpty(result.Value);
        if (confirm)
            return;

        contexto.PreventNavigation();
    }

}
